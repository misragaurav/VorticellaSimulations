// Structure declaration file, it includes all other "includes"
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>
#include <time.h>
#include <gsl/gsl_math.h>
#include "rod.h"

struct elem {
  real q0, qx, qy, qz, q, q2;
  real d[3][3], e[3][4];
  real cs1, cs2, cs3, cb1, cb2, cb3;       // Modulus 
  real s01, s02, s03, b01, b02, b03;       // Reference strains
  real s1, s2, s3, b1, b2, b3;             // Strains
  real f1, f2, f3, t1, t2, t3;             // Force and couple

  real pe;                                 // Pot Energy
  real peT1, peT2, peT3, peR1, peR2, peR3; // pot energies of the elements

  // For spasmoneme model
  real L, X0, c, peS, ts;
  real Ca; // Calcium conc
  real tauBind; // Ca binding time constant, Ca dependent

  // For non-hamiltonian force routine
  real sx, sy, sz;                         // Strains in SF
  real fx, fy, fz;                         // Forces in SF
}; 					     
					     
struct node {				     
  real d[3][3], e[3][4];		     
  real rx, ry, rz, q0, qx, qy, qz;         // Coordinates
  real rz0, rs;                             // Initial z coordinate and radius of Spas
  real px, py, pz, lx, ly, lz;             // Momenta in Space frame 
  real p1, p2, p3, l1, l2, l3;             // Momenta in Body frame
  real f1, f2, f3, t1, t2, t3;             // Force and couple
  real fx, fy, fz, t0, tx, ty, tz;         // Forces in SFF
  real ke; 				     
  real keT1, keT2, keT3, keR1, keR2, keR3; // energies of the DoF */

  // For spasmoneme model
  real x1, x2, x3; // positions of spasmoneme contact points in body frame
  real xx, xy, xz; // positions of spasmoneme contact points in space frame
  real T;          // 1D tension
};

struct rod {
  struct node *nodes;                        // Nodal data structure
  struct elem *elems;                        // Element data structure
  int  n_nodes, n_elems;                     // Number of nodes, elements
  real i1, i2, i3, xm, xa, le;               // Inertia, mass, area, length
  real delS;                                 // Segment length of Spasmoneme
  real cs1, cs2, cs3, cb1, cb2, cb3;       // Modulus 
  real At1, Bt1, Ct1, At2, Bt2, Ct2, At3, Bt3, Ct3; //OU process coefficients - translational
  real Ar1, Br1, Cr1, Ar2, Br2, Cr2, Ar3, Br3, Cr3; //OU process coefficients - rotational
  real zt1, zt2, zt3, zr1, zr2, zr3;                //Friction per unit mass coeff

  real ke, pe, peS;				       
  real keT1, keT2, keT3, keR1, keR2, keR3;     
  real peT1, peT2, peT3, peR1, peR2, peR3;     
					       
  real xcm, ycm, zcm;			     // Center of mass coordinates
  real pxcm, pycm, pzcm, lxcm, lycm, lzcm;   // Center of mass momenta

  real x0, y0, z0, xL, yL, zL ;                  //Tip 0 positions
  real q00, qx0, qy0, qz0, q0L, qxL, qyL, qzL ;  //Tip L positions
					       
  real f01, f02, f03, m01, m02, m03;         // Boundary loads
  real fL1, fL2, fL3, mL1, mL2, mL3;	       
  real f0x, f0y, f0z, m0x, m0y, m0z;	       
  real fLx, fLy, fLz, mLx, mLy, mLz;	       
					       
  int v01, v02, v03, w01, w02, w03;          // Boundary conditions
  int vL1, vL2, vL3, wL1, wL2, wL3;
};

